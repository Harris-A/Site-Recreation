// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "app/generated/prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Products {
  id          String   @id @default(uuid()) // Unique identifier
  name        String   @db.VarChar(255) // Product name
  description String?  @db.Text // Optional product description
  price       Decimal  @db.Decimal(10, 2) // Price with 2 decimal places
  stock       Int      @default(0) // Inventory count
  imageUrl    String   @db.VarChar(500) //URL for product image
  createdAt   DateTime @default(now()) // Timestamp for creation
  updatedAt   DateTime @updatedAt // Auto-updated timestamp
}

model Category {
  id          String   @id @default(uuid()) // Unique identifier for the category
  name        String   @db.VarChar(255) // Category name (max 255 characters)
  description String?  @db.Text // Optional description of the category
  createdAt   DateTime @default(now()) // Timestamp when the category is created
  updatedAt   DateTime @updatedAt // Timestamp automatically updated on category update
}

//Customer account table
model User {
  id            String    @id @default(uuid())
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  firstname     String
  lastname      String
  username      String    @unique
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  sessions      Session[]
}

//Customer session table
model Session {
  id        String   @id @default(cuid())
  userId    String
  expiresAt DateTime
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
